1)	How did viewing a diff between two versions of a file help you see the bug that was introduced?
	The differences between the two files were isolated and displayed to the viewer. Errors may be highlighted and become more obvious this way.

2)	How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	It tells us about the changes that were made and all the iterations
 
3)	What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	Pros
	Allows us to make judgement calls on whether a commit consists of enough significant changes
	Cons
	Gives the opportunity to people to not use it properly

4)	How can you use the commands git log and git diff to view the history of files?
	Use git log first to see an overview of the file version history and what has changed. Then use git diff to compare two commits for more detailed information on what changed line by line

5)	How might using version control make you more confident to make changes that could break something?
	I can always revert back to a previous version that worked

6)	Now that you have your workspace set up, what do you want to try using Git for?
	Code versioning control